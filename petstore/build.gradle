plugins {
    id 'org.hidetake.swagger.generator' version '2.18.1'
    id 'java'
    id 'idea'
    id 'org.jetbrains.kotlin.jvm' version '1.3.31'
}

group 'io.swagger'
version '1.0.0'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    swaggerCodegen 'io.swagger.codegen.v3:swagger-codegen-cli:3.0.5'
    swaggerCodegen project(":generator")

    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.6.0'
    implementation 'com.squareup.retrofit2:retrofit:2.6.0'
    implementation "com.squareup.moshi:moshi:1.8.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

swaggerSources*.code*.dependsOn 'kotlin-client-retrofit2:generator:jar'

build.dependsOn generateSwaggerCode

swaggerSources {
    petstore {
        // http://petstore.swagger.io/v2/swagger.json
        inputFile = file('swagger.json')
        code {
            language = 'me.destro.swagger.codegen.kotlin.KotlinClientRetrofit2Generator'
        }
    }
}

// Configure compile task dependency and source
compileJava.dependsOn swaggerSources.petstore.code

sourceSets.main.java.srcDir "${swaggerSources.petstore.code.outputDir}/src/main/kotlin"
sourceSets.main.resources.srcDir "${swaggerSources.petstore.code.outputDir}/src/main/resources"

idea {
    module {
        // Marks the already(!) added srcDir as "generated"
        generatedSourceDirs += file("${swaggerSources.petstore.code.outputDir}/src/main/kotlin")
    }
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}